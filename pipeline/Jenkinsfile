#!groovy?
pipeline{
    agent{
        docker {
            image 'maven:3.8.6-amazoncorretto-17'
            args '--user=0 -v $WORKSPACE:/tmp/sbapp -w /temp/sbapp'
            reuseNode true
        }
    }
    environment {
        Version="1.0-SNAPSHOT"
        PJNAME="Quiz-Online"
        Branch="dev"
        CredentialID="credential_axyres_github"
        gitRepo="https://github.com/AxyRes/Quiz-Online.git"
    }
    stages{
        stage('Stage 1 Getting build number'){
            steps{
                script{
                    def now = new Date()
					buildVersion =  now.format("yyyy.MM.dd.HHmm", TimeZone.getTimeZone('UTC'))
					currentBuild.displayName = "${buildVersion}"
                }
            }
        }
        stage('Stage 2 Checkout Code'){
            steps{
                checkout([$class: 'GitSCM', branches: [[name: "$Branch"]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CheckoutOption', timeout: 90], [$class: 'CloneOption', depth: 0, noTags: false, reference: '', shallow: false, timeout: 90], [$class: 'SubmoduleOption', disableSubmodules: false, parentCredentials: true, recursiveSubmodules: true, reference: '', timeout: 90, trackingSubmodules: true]], gitTool: 'Default', submoduleCfg: [], userRemoteConfigs: [[credentialsId: "$CredentialID", url: "$gitRepo"]]])
            }
        }
        /*stage('Stage 3 Get commit harsh'){
            steps{
                sh"""
                    yum install git -y
                    cd ${WORKSPACE}/
                    echo "${PJNAME}" > ${WORKSPACE}/commit.txt
                    git log -1 --pretty=format:'%h, %an, %ar, %aD, %s' >> ${WORKSPACE}/commit.txt
					echo "\n############################################" >> ${WORKSPACE}/commit.txt

                """
            }
        }*/
        stage('Stage 3 Build Code'){
            steps{
                script{
                    sh"""
                        echo 'Start Build Code'
                        mvn clean install -DskipTests=true -U -Dversion=${Version}

                        yum install zip unzip -y
                        cd ${WORKSPACE}
                        rm -f report.zip
                        zip -r report.zip ReportOut

                        echo 'End Build Code'
                    """
                }
            }
        }
    }
}
String determineRepoName() {
    return scm.getUserRemoteConfigs()[0].getUrl().tokenize('/').last().split("\\.")[0]
}